version: 2.1

orbs:
  ocean: dwave/ocean@1.3

environment:
  PIP_PROGRESS_BAR: 'off'

jobs:
  test-linux:
    parameters:
      python-version:
        type: string
      dimod-version:
        type: string

    executor:
      name: ocean/python
      python-version: << parameters.python-version >>

    steps:
      - checkout

      - ocean/pip-install:
          requirements: requirements.txt tests/requirements.txt

      - ocean/pip-install:
          cache: false
          packages: . dimod<< parameters.dimod-version >>

      - run: &run-python-tests
          name: Run Python tests
          command: env/bin/coverage run -m unittest discover

      - run:
          name: Upload code coverage
          command: |
            . env/bin/activate
            codecov     # calls `coverage xml`, so we must activate venv

  test-macos:
    parameters:
      python-version:
        type: string
      xcode:
        type: string

    macos:
      xcode: << parameters.xcode >>

    steps:
      - checkout

      - ocean/brew-install-pyenv

      - ocean/pyenv-install-python:
          python-version: << parameters.python-version >>
          cache-key-prefix: << parameters.xcode >>

      - ocean/pip-install:
          requirements: requirements.txt tests/requirements.txt

      - ocean/pip-install:
          cache: false
          packages: .

      - run: *run-python-tests

  test-docs:
    executor:
      name: ocean/python
      python-version: "3.7"

    steps:
      - checkout

      - ocean/pip-install:
          requirements: requirements.txt tests/requirements.txt docs/requirements.txt

      - run:
          name: Build docs
          command: |
            . env/bin/activate
            make -C docs/ html

      - store_artifacts:
          path: ./docs/build/html

      - run:
          name: Test docs
          command: |
            . env/bin/activate
            make -C docs/ doctest

      - run:
          name: Test links
          command: |
            . env/bin/activate
            make -C docs/ linkcheck

  build-dist:
    executor:
      name: ocean/python
      python-version: "3.9"

    steps:
      - checkout

      - ocean/pip-install:
          requirements: requirements.txt
          packages: wheel
          cache: false

      - ocean/build-dist:
          dist-type: sdist bdist_wheel

      - store_artifacts:
          path: dist

      - persist_to_workspace:
          root: dist
          paths: .


workflows:
  test:
    jobs:
      - test-linux:
          name: test-linux-py<< matrix.python-version >><<# matrix.dimod-version >>-dimod<< matrix.dimod-version >><</ matrix.dimod-version >>
          matrix:
            parameters:
              python-version: &python-versions ["3.6.12", "3.7.9", "3.8.6", "3.9.0", "3.10.0"]
              dimod-version: ["", "~=0.8.0,>=0.8.21", "~=0.9.0", "~=0.10.0,>0.10.4"]
            exclude:
              # dimod < 0.10 not supported on py310
              - python-version: "3.10.0"
                dimod-version: "~=0.8.0,>=0.8.21"
              - python-version: "3.10.0"
                dimod-version: "~=0.9.0"

      - test-macos:
          name: test-macos-py<< matrix.python-version >>
          matrix:
            parameters:
              python-version: *python-versions
              xcode: ["13.2.0"]

      - test-docs
      - build-dist

  deploy:
    jobs:
      - build-dist:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*((\.dev|rc)([0-9]+)?)?$/
            branches:
              ignore: /.*/

      - ocean/pypi-deploy:
          requires:
            - build-dist
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*((\.dev|rc)([0-9]+)?)?$/
            branches:
              ignore: /.*/
